name: Validate K8s YAML

on:
  push:
    paths:
      - "k8s/**/*.yaml"

jobs:
  validate:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3

      - name: Install kubeconform
        run: |
          curl -L https://github.com/yannh/kubeconform/releases/latest/download/kubeconform-linux-amd64.tar.gz | tar xz
          sudo mv kubeconform /usr/local/bin/

      # kubeconform 검증 스텝 (추가)
      - name: Validate manifests with kubeconform
        run: |
          kubeconform \
            -strict \                       # 스키마 엄격 모드
            -output text \                  # 텍스트 출력
            -summary \                      # 성공/실패 요약 표시
            -kubernetes-version 1.29.0 \    # EKS 1.29 기준
            ./k8s/*.yaml

      #YAML 문법 검사까지 추가하고 싶으면 아래 주석 해제
      # - name: Lint YAML
      #   run: |
      #     pip install yamllint
      #     yamllint ./k8s


      - name: Verify image signatures (cosign)
        run: |
          curl -sSL https://github.com/sigstore/cosign/releases/latest/download/cosign-linux-amd64 -o cosign
          chmod +x cosign && sudo mv cosign /usr/local/bin/
          cosign verify --key cosign.pub ghcr.io/2025-demo-01/svc-gateway:0.1.0

      - name: Conftest (policy gate)
        run: |
          curl -sSL https://github.com/open-policy-agent/conftest/releases/download/v0.57.0/conftest_Linux_x86_64.tar.gz | tar -xz -C /usr/local/bin
          # 예: 'mTLS=STRICT' 같은 규칙 검사
          mkdir -p policies && cat > policies/mtls.rego <<'EOF'
          package main
          deny[msg] {
            input.kind == "PeerAuthentication"
            not input.spec.mtls.mode
            msg := "mTLS must be STRICT"
          }
          deny[msg] {
            input.kind == "PeerAuthentication"
            input.spec.mtls.mode != "STRICT"
            msg := "mTLS must be STRICT"
          }
          EOF
          conftest test k8s/*.yaml

